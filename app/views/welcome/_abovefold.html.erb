<style>
.TickerNews {
  width: 100%;
  height: 50px;
  line-height: 50px;
}

.ti_wrapper {
  width: 100%;
  position: relative;
  overflow: hidden;
  height: 50px;
}

.ti_slide {
  width: 30000px;
  position: relative;
  left: 0;
  top: 0;
}

.ti_content {
  width: 8000px;
  position: relative;
  float: left;
}

.ti_news { float: left; }

.marquee {
  width: 100%;
  overflow: hidden;
  border: 1px solid #ccc;
  background: #ccc;
  font-size:18px;
  margin-bottom:5px;
}
.marquee a {
  color:black;
}
</style>


<script type='text/javascript' src='//cdn.jsdelivr.net/jquery.marquee/1.4.0/jquery.marquee.min.js'></script>



<div class="row style1">
  <div class="col-md-12">
    <p class="site">
      <img src='https://lh5.ggpht.com/64N-cwJ14nR3t-0wJ5nRbz2VTo9UC0jj7GKiUnHxOjCzxduSs3_FO2S0CT3gv2RFZChg92XYpw=w300'
      style='width:195px; margin-top:-30px; margin-bottom:-30px'><br>
      Above the fold</p>


    <div class="marquee">
      <%@newsweeks.past_day.all.each do |a|%>
      <a href='<%=a.url%>'><%=a.title.truncate_words(20, omission: '...') rescue nil%></a> |
      <%end%>
    </div>

    <ul class="newsticker">
      <li>Etiam imperdiet volutpat libero eu tristique.</li>
      <li>Curabitur porttitor ante eget hendrerit adipiscing.</li>
      <li>Praesent ornare nisl lorem, ut condimentum lectus gravida ut.</li>
      <li>Nunc ultrices tortor eu massa placerat posuere.</li>
    </ul>

    <script>
    $('.marquee').marquee({
      //speed in milliseconds of the marquee
      duration: 15000,
      startVisible: true,
      pauseOnHover: false
    });
    </script>

      <% @newsweeks.past_day.first(1).each do |a| %>
      <div class='col-md-8'>
      <a href='<%=a.url%>'>
        <div class="image" style=' width: 100%;
        height: 450px;
    overflow: hidden;'>
         <img src="<%=a.image rescue nil%>" style="
         width: 100%;
    height: 550px;
    margin: -75px 0px 0px 00px;">
         <h2 class="headline_text" style="width: 400px">
           <span style="color: #FFCE00;
                          text-align:center;
                          letter-spacing: -1px;
                          background: rgb(0, 0, 0); /* fallback color */
                          background: rgba(0, 0, 0, 0.7);">
             <%=a.title.truncate_words(20, omission: '...') rescue nil%>
           </span>
         </h2>
       </div> </a>
           </div>
      <% end %>


<ul class="newsticker col-md-4" >
  <li class="col-md-12" style="background:url('http://assets.nydailynews.com/polopoly_fs/1.52009.1313770405!/img/httpImage/image.jpg_gen/derivatives/gallery_1200/gal-prohibition17-web-jpg.jpg');  background-size:     cover;                      /* <------ */
  background-repeat:   no-repeat;
  background-position: 0% 0%;height:150px;padding-top: 35px;text-align:center; border:2px solid red">

      <% @nytimes.past_day.first(2).each do |a| %>
      <a href='<%=a.url%>'>  <span style="margin-top: 10px; font-size:1.5em; height:1px; text-align:center; color: #FFCE00;
                     text-align:center;
                     letter-spacing: -1px;
                     background: rgb(0, 0, 0); /* fallback color */
                     background: rgba(0, 0, 0, 0.7);"><%= a.title %></span> </a>
      <% end %>

  </li>
  <li class="col-md-12" style="background:url('http://assets.nydailynews.com/polopoly_fs/1.52009.1313770405!/img/httpImage/image.jpg_gen/derivatives/gallery_1200/gal-prohibition17-web-jpg.jpg');  background-size:     cover;                      /* <------ */
  background-repeat:   no-repeat;
  background-position: 0% 0%;height:150px;padding-top: 35px;text-align:center; border:2px solid green">


  </li>
  <li class="col-md-12" style="background:url('http://assets.nydailynews.com/polopoly_fs/1.52009.1313770405!/img/httpImage/image.jpg_gen/derivatives/gallery_1200/gal-prohibition17-web-jpg.jpg');  background-size:     cover;                      /* <------ */
  background-repeat:   no-repeat;
  background-position: 0% 0%;height:150px;padding-top: 35px;text-align:center; border:2px solid blue">

      <% @buzzfeeds.past_day.last(1).each do |a| %>
      <a href='<%=a.url%>'>  <span style="margin-top: 10px; font-size:1.5em; height:1px; color: #FFCE00;
                     text-align:center;
                     letter-spacing: -1px;
                     background: rgb(0, 0, 0); /* fallback color */
                     background: rgba(0, 0, 0, 0.7);"><%= a.title %></span> </a>
      <% end %>

  </li>
  </ul>

    <p style="font-size:.9em; text-align:center">

      <% @mediums.past_day.last(1).each do |a| %>
      <a href='<%=a.url%>'>  <span style="font-size:.8em; height:1px;"><%= a.title %></span> </a> |
      <% end %>




      <% @economists.past_day.last(1).each do |a| %>
      <a href='<%=a.url%>'>  <span style="font-size:.8em; height:1px;"><%= a.title %></span> </a> |
      <% end %>
      <% @imgurs.past_day.last(1).each do |a| %>
      <a href='<%=a.url%>'>  <span style="font-size:.8em; height:1px;"><%= a.title %></span> </a> |
      <% end %>
    </p>
  </div>
</div>


<script>

(function($, window, document, undefined) {
    'use strict';
    var pluginName = 'newsTicker',
            defaults = {
                    row_height: 150,
                    max_rows: 3,
                    speed: 1000,
                    duration: 2500,
                    direction: 'up',
                    autostart: 1,
                    pauseOnHover: 1,
                    nextButton: null,
                    prevButton: null,
                    startButton: null,
                    stopButton: null,
                    hasMoved: function() {},
                    movingUp: function() {},
                    movingDown: function() {},
                    start: function() {},
                    stop: function() {},
                    pause: function() {},
                    unpause: function() {}
            };

    function Plugin(element, options) {
            this.element = element;
            this.$el = $(element);
            this.options = $.extend({}, defaults, options);
            this._defaults = defaults;
            this._name = pluginName;
            this.moveInterval;
            this.state = 0;
            this.paused = 0;
            this.moving = 0;
            if (this.$el.is('ul, ol')) {
                    this.init();
            }
    }

    Plugin.prototype = {
            init: function() {
                    this.$el.height(this.options.row_height * this.options.max_rows)
                            .css({overflow : 'hidden'});

                    this.checkSpeed();

                    if(this.options.nextButton && typeof(this.options.nextButton[0]) !== 'undefined')
                            this.options.nextButton.click(function(e) {
                                    this.moveNext();
                                    this.resetInterval();
                            }.bind(this));
                    if(this.options.prevButton && typeof(this.options.prevButton[0]) !== 'undefined')
                            this.options.prevButton.click(function(e) {
                                    this.movePrev();
                                    this.resetInterval();
                            }.bind(this));
                    if(this.options.stopButton && typeof(this.options.stopButton[0]) !== 'undefined')
                            this.options.stopButton.click(function(e) {
                                    this.stop()
                            }.bind(this));
                    if(this.options.startButton && typeof(this.options.startButton[0]) !== 'undefined')
                            this.options.startButton.click(function(e) {
                                    this.start()
                            }.bind(this));

                    if(this.options.pauseOnHover) {
                            this.$el.hover(function() {
                                    if (this.state)
                                            this.pause();
                            }.bind(this), function() {
                                    if (this.state)
                                            this.unpause();
                            }.bind(this));
                    }

                    if(this.options.autostart)
                            this.start();
            },

            start: function() {
                    if (!this.state) {
                            this.state = 1;
                            this.resetInterval();
                            this.options.start();
                    }
            },

            stop: function() {
                    if (this.state) {
                            clearInterval(this.moveInterval);
                            this.state = 0;
                            this.options.stop();
                    }
            },

            resetInterval: function() {
                    if (this.state) {
                            clearInterval(this.moveInterval);
                            this.moveInterval = setInterval(function() {this.move()}.bind(this), this.options.duration);
                    }
            },

            move: function() {
                     if (!this.paused) this.moveNext();
            },

            moveNext: function() {
                    if (this.options.direction === 'down')
                            this.moveDown();
                    else if (this.options.direction === 'up')
                            this.moveUp();
            },

            movePrev: function() {
                    if (this.options.direction === 'down')
                            this.moveUp();
                    else if (this.options.direction === 'up')
                            this.moveDown();
            },

            pause: function() {
                    if (!this.paused) this.paused = 1;
                    this.options.pause();
            },

            unpause: function() {
                    if (this.paused) this.paused = 0;
                    this.options.unpause();
            },

            moveDown: function() {
                    if (!this.moving) {
                            this.moving = 1;
                            this.options.movingDown();
                            this.$el.children('li:last').detach().prependTo(this.$el).css('marginTop', '-' + this.options.row_height + 'px')
                                    .animate({marginTop: '0px'}, this.options.speed, function(){
                                            this.moving = 0;
                                            this.options.hasMoved();
                                    }.bind(this));
                    }
            },

            moveUp: function() {
                    if (!this.moving) {
                            this.moving = 1;
                            this.options.movingUp();
                            var element = this.$el.children('li:first');
                            element.animate({marginTop: '-' + this.options.row_height + 'px'}, this.options.speed,
                                    function(){
                                            element.detach().css('marginTop', '0').appendTo(this.$el);
                                            this.moving = 0;
                                            this.options.hasMoved();
                                    }.bind(this));
                    }
            },

            updateOption: function(option, value) {
                    if (typeof(this.options[option]) !== 'undefined'){
                            this.options[option] = value;
                            if (option == 'duration' || option == 'speed'){
                                this.checkSpeed();
                                this.resetInterval();
                            }
                    }
            },

            add: function(content){
                this.$el.append($('<li>').html(content));
            },

            getState: function() {
                    if (paused) return 2 // 2 = paused
                    else return this.state;// 0 = stopped, 1 = started
            },

            checkSpeed: function() {
                    if (this.options.duration < (this.options.speed + 25))
                            this.options.speed = this.options.duration - 25;
            },

            destroy: function() {
                    this._destroy(); // or this.delete; depends on jQuery version
            }
    };

    $.fn[pluginName] = function(option) {
            var args = arguments;

            return this.each(function() {
                    var $this = $(this),
                            data = $.data(this, 'plugin_' + pluginName),
                            options = typeof option === 'object' && option;
                    if (!data) {
                            $this.data('plugin_' + pluginName, (data = new Plugin(this, options)));
                    }
                    // if first argument is a string, call silimarly named function
                    if (typeof option === 'string') {
                            data[option].apply(data, Array.prototype.slice.call(args, 1));
                    }
            });
    };
})(jQuery, window, document);
</script>

<script>
$('.newsticker').newsTicker();
</script>
